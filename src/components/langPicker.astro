---
import {defaultLang, languages, ui } from '../i18n/ui'
import {getLangFromUrl} from '../i18n/utils'

function getRelativePathnameWithoutLocale() {
  let str = ""
  // It depends that locale code consist only of 2 characters, like "en" or "ar"
  const lang = Astro.url.pathname.slice(1,3)
  if (lang in ui) {
    str = Astro.url.pathname.slice(3);
  } else {
    str = Astro.url.pathname
  }
  return str || "/"
}
const reltaivePathname = getRelativePathnameWithoutLocale();
// Used to make the current local a selected option
const currentLocale = getLangFromUrl(Astro.url)
---
<div class="language-selector">
  <svg aria-hidden="true" class="icon label-icon astro-vziunqqw astro-pj66s3ve" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
    <path fill-rule="evenodd" d="M8.516 3a.94.94 0 0 0-.941.94v1.15H2.94a.94.94 0 1 0 0 1.882h7.362a7.422 7.422 0 0 1-1.787 3.958 7.42 7.42 0 0 1-1.422-2.425.94.94 0 1 0-1.774.627 9.303 9.303 0 0 0 1.785 3.043 7.422 7.422 0 0 1-4.164 1.278.94.94 0 1 0 0 1.881 9.303 9.303 0 0 0 5.575-1.855 9.303 9.303 0 0 0 4.11 1.74l-.763 1.525a.968.968 0 0 0-.016.034l-1.385 2.77a.94.94 0 1 0 1.683.841l1.133-2.267h5.806l1.134 2.267a.94.94 0 0 0 1.683-.841l-1.385-2.769a.95.95 0 0 0-.018-.036l-3.476-6.951a.94.94 0 0 0-1.682 0l-1.82 3.639a7.423 7.423 0 0 1-3.593-1.256 9.303 9.303 0 0 0 2.27-5.203h1.894a.94.94 0 0 0 0-1.881H9.456V3.94A.94.94 0 0 0 8.516 3Zm6.426 11.794a1.068 1.068 0 0 1-.02.039l-.703 1.407h3.924l-1.962-3.924-1.24 2.478Z" clip-rule="evenodd"></path>
  </svg>
  <select id="select-elm">
    {Object.entries(languages).map(([lang, label]) => (
      <option 
      value={lang == defaultLang ? `${reltaivePathname}` : `/${lang + reltaivePathname}`}
      selected={lang == currentLocale ? true : false}
      >
        {label}
      </option>
    ))}
  </select>
</div>

<script>
  import { navigate } from 'astro:transitions/client';

  async function navigateRoute(ev: Event) { 
    let pathname = (ev.target as HTMLSelectElement).value;
    // window.location.pathname = pathname
    navigate(pathname)
  }

  // It losted track of the element when I extracted document.querySelector
  // But it worked when I did it in a raw way.
  document.querySelector('#select-elm').addEventListener('change', navigateRoute);

  document.addEventListener('astro:page-load', () => {
    document.querySelector('#select-elm').addEventListener('change', navigateRoute)
  });
</script>


<style>
  .language-selector {
    display: flex;
    justify-content: space-around;
    align-items: center;
    color: #fff;
  }

  .language-selector :is(select, svg) {
    background-color: #13151a;
    color: #fff;
    margin: 0.2rem;
    border: none;
  }

  .language-selector select {
    font-size: 1.2rem;
  }
</style>